name: Deploy Marp slides (web and pdf) to GitHub Pages

# Allow one concurrent deployment
concurrency:
  group: GitHub Pages
  cancel-in-progress: true

on:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install packages
        run: sudo apt install --yes rename tree

      - name: Delete the README.md file at the root of the repository
        run: rm README.md

      - name: Build Marp slides (web)
        uses: docker://marpteam/marp-cli:v3.0.2
        env:
          MARP_USER: root:root
        with:
          args: --html --allow-local-files --input-dir .

      - name: Build Marp slides (pdf)
        uses: docker://marpteam/marp-cli:v3.0.2
        env:
          MARP_USER: root:root
        with:
          args: --html --allow-local-files --input-dir . --jpeg-quality 100 --pdf

      - name: Prepare files
        run: |
          # Create public directory
          mkdir -p public

          # Rename all README.html to index.html
          find '.' -type f -name "README.html" -exec rename 's/README/index/' '{}' \;

          # Rename all README.pdf to the name of their parent directory
          find '.' -type f -name "README.pdf" -exec sh -c 'mv "$1" "$(dirname "$1")/$(basename "$(dirname "$1")").pdf"' sh {} \;

          # Delete all README.md files
          find '.' -type f -name "README.md" -exec rm {} \;

          # Move all directories containing an index.html to public directory
          find '.' -type f -name "index.html" -exec sh -c 'mv "$(dirname "$1")" public' sh {} \;

          # Move to public directory
          cd public

          # Generate the index.html file
          tree -H '.' --noreport --dirsfirst -T 'HEIG-VD DAI Course' -P "*.html|*.pdf" --prune --charset utf-8 -o index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
